apophen_shop_manager/
├── lib/
│   ├── main.dart                      # Application entry point
│   ├── app.dart                       # Main MaterialApp setup, routing, theme
│   │
│   ├── core/
│   │   ├── constants/                 # App-wide constants (routes, branding, API keys)
│   │   │   ├── app_constants.dart
│   │   │   ├── routes.dart
│   │   │   └── api_endpoints.dart
│   │   ├── enums/                     # Global enums (e.g., UserRole, SyncStatus)
│   │   ├── errors/                    # Custom exception classes
│   │   ├── utils/                     # Utility functions (e.g., date formatters, validators)
│   │   │   ├── app_logger.dart
│   │   │   ├── helpers.dart
│   │   │   └── validators.dart
│   │   └── services/                  # Core services (e.g., connectivity, notifications)
│   │       └── connectivity_service.dart
│   │
│   ├── data/
│   │   ├── local/                     # Local data storage (offline-first focus)
│   │   │   ├── database/              # Database wrappers (Isar/Hive/SQLite)
│   │   │   │   ├── app_database.dart
│   │   │   │   └── daos/              # Data Access Objects for each entity
│   │   │   │       ├── product_dao.dart
│   │   │   │       └── user_dao.dart
│   │   │   ├── preferences/           # Shared preferences for simple key-value pairs
│   │   │   │   └── shared_prefs_service.dart
│   │   │   └── sync/                  # Logic for managing data sync and conflicts
│   │   │       ├── sync_manager.dart
│   │   │       └── sync_queue.dart
│   │   ├── models/                    # Data models (local & remote)
│   │   │   ├── auth/
│   │   │   │   ├── user_model.dart
│   │   │   │   └── auth_response.dart
│   │   │   ├── inventory/
│   │   │   │   ├── product_model.dart
│   │   │   │   └── stock_adjustment.dart
│   │   │   └── base_model.dart        # Abstract base model if needed
│   │   ├── network/                   # API client and remote data sources
│   │   │   ├── api_client.dart
│   │   │   └── remote_data_source.dart
│   │   └── repositories/              # Abstraction layer for data access
│   │       ├── auth_repository.dart
│   │       ├── inventory_repository.dart
│   │       └── base_repository.dart
│   │
│   ├── domain/                        # Business logic and use cases (optional, for larger apps)
│   │   ├── entities/                  # Pure Dart objects representing business entities
│   │   ├── repositories/              # Interfaces for repositories
│   │   ├── usecases/                  # Business logic operations
│   │
│   ├── features/                      # Grouping by feature (e.g., auth, inventory, pos)
│   │   ├── authentication/
│   │   │   ├── data/                  # Auth specific data sources/models/repos
│   │   │   │   ├── models/
│   │   │   │   └── repositories/
│   │   │   ├── presentation/          # Auth specific UI (screens, widgets, providers)
│   │   │   │   ├── screens/
│   │   │   │   │   ├── login_screen.dart
│   │   │   │   │   └── splash_screen.dart
│   │   │   │   ├── widgets/
│   │   │   │   └── providers/
│   │   │   │       └── auth_provider.dart # Using Riverpod/Provider for state
│   │   │   └── services/              # Auth specific services (e.g., biometric auth)
│   │   │       └── auth_service.dart
│   │   ├── inventory/
│   │   │   ├── data/
│   │   │   ├── presentation/
│   │   │   └── services/
│   │   └── pos/
│   │       ├── data/
│   │       ├── presentation/
│   │       └── services/
│   │   # ... other modules (CRM, Reports, etc.)
│   │
│   └── shared/                        # Reusable UI components and common widgets
│       ├── widgets/
│       │   ├── custom_buttons.dart
│       │   └── app_bar_widget.dart
│       └── styles/                    # Typography, colors, themes
│           ├── app_colors.dart
│           ├── app_text_styles.dart
│           └── app_theme.dart
│
├── assets/
│   ├── images/                        # Image assets
│   ├── icons/                         # Icon assets
│   └── fonts/                         # Custom fonts
│
├── pubspec.yaml                       # Project dependencies and metadata
├── pubspec.lock                       # Generated by Flutter, manages dependency versions
├── README.md                          # Project description
├── .gitignore                         # Files/directories to ignore in Git
